{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/suggest-emojis.ts"],"sourcesContent":["// src/ai/flows/suggest-emojis.ts\n'use server';\n\n/**\n * @fileOverview A flow to suggest relevant emojis based on the content of a message.\n *\n * - suggestEmojis - A function that handles the emoji suggestion process.\n * - SuggestEmojisInput - The input type for the suggestEmojis function.\n * - SuggestEmojisOutput - The return type for the suggestEmojis function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst SuggestEmojisInputSchema = z.object({\n  message: z.string().describe('The message content to suggest emojis for.'),\n});\n\nexport type SuggestEmojisInput = z.infer<typeof SuggestEmojisInputSchema>;\n\nconst SuggestEmojisOutputSchema = z.object({\n  emojis: z.array(z.string()).describe('An array of suggested emojis.'),\n});\n\nexport type SuggestEmojisOutput = z.infer<typeof SuggestEmojisOutputSchema>;\n\nexport async function suggestEmojis(input: SuggestEmojisInput): Promise<SuggestEmojisOutput> {\n  return suggestEmojisFlow(input);\n}\n\nconst suggestEmojisPrompt = ai.definePrompt({\n  name: 'suggestEmojisPrompt',\n  input: {schema: SuggestEmojisInputSchema},\n  output: {schema: SuggestEmojisOutputSchema},\n  prompt: `Suggest relevant emojis for the following message. Return only the emojis in an array of strings.\n\nMessage: {{{message}}}`, \n});\n\nconst suggestEmojisFlow = ai.defineFlow(\n  {\n    name: 'suggestEmojisFlow',\n    inputSchema: SuggestEmojisInputSchema,\n    outputSchema: SuggestEmojisOutputSchema,\n  },\n  async input => {\n    const {output} = await suggestEmojisPrompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":"AAAA,iCAAiC;;;;;;AAGjC;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,2BAA2B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC/B;AAIA,MAAM,4BAA4B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzC,QAAQ,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;AACvC;AAIO,eAAe,cAAc,KAAyB;IAC3D,OAAO,kBAAkB;AAC3B;AAEA,MAAM,sBAAsB,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC1C,MAAM;IACN,OAAO;QAAC,QAAQ;IAAwB;IACxC,QAAQ;QAAC,QAAQ;IAAyB;IAC1C,QAAQ,CAAC;;sBAEW,CAAC;AACvB;AAEA,MAAM,oBAAoB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACrC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,oBAAoB;IAC3C,OAAO;AACT;;;IAtBoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/chat/%5Bid%5D/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {suggestEmojis as '40d3bcb86fb5b599d02d8f01b28d0ce142d94decdf'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 348, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/chat/%5Bid%5D/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/chat/[id]/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/chat/[id]/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8R,GAC3T,4DACA","debugId":null}},
    {"offset": {"line": 362, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/chat/%5Bid%5D/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/chat/[id]/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/chat/[id]/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0Q,GACvS,wCACA","debugId":null}},
    {"offset": {"line": 376, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}