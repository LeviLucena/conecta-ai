{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/layout/main-layout.tsx"],"sourcesContent":["// src/components/layout/main-layout.tsx\n'use client';\n\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\nimport { MessageCircle, Phone, Users, Settings, ArrowLeft } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { useRouter } from 'next/navigation';\n\ninterface MainLayoutProps {\n  children: React.ReactNode;\n  title: string;\n  showBackButton?: boolean;\n  headerActions?: React.ReactNode;\n}\n\nconst navItems = [\n  { href: '/', label: 'Chats', icon: MessageCircle },\n  { href: '/calls', label: 'Calls', icon: Phone },\n  { href: '/contacts', label: 'Contacts', icon: Users },\n  { href: '/settings', label: 'Settings', icon: Settings },\n];\n\nexport function MainLayout({ children, title, showBackButton = false, headerActions }: MainLayoutProps) {\n  const pathname = usePathname();\n  const router = useRouter();\n\n  return (\n    <div className=\"flex flex-col h-screen max-w-md mx-auto bg-background shadow-lg border border-border md:rounded-lg overflow-hidden\">\n      <header className=\"bg-primary text-primary-foreground p-4 flex items-center justify-between sticky top-0 z-50 h-16 shadow-md\">\n        <div className=\"flex items-center gap-2 min-w-0\"> {/* Added min-w-0 for truncate to work */}\n          {showBackButton && (\n            <Button variant=\"ghost\" size=\"icon\" className=\"text-primary-foreground hover:bg-primary/80\" onClick={() => router.back()}>\n              <ArrowLeft className=\"h-6 w-6\" />\n            </Button>\n          )}\n          {typeof title === 'string' ? (\n            <h1 className=\"text-xl font-headline font-semibold truncate\">{title}</h1>\n          ) : (\n            <div className=\"text-xl font-headline font-semibold truncate\">{title}</div>\n          )}\n        </div>\n        {headerActions && <div className=\"flex items-center gap-2\">{headerActions}</div>}\n      </header>\n\n      <main className=\"flex-1 overflow-y-auto p-0 pb-16 bg-background\"> {/* Ensure padding bottom for nav, changed from bg-card-background */}\n        {children}\n      </main>\n\n      <nav className=\"fixed bottom-0 left-0 right-0 max-w-md mx-auto bg-card border-t border-border shadow-t-lg h-16 z-50 md:rounded-b-lg\">\n        <div className=\"flex justify-around items-center h-full\">\n          {navItems.map((item) => {\n            const isActive = pathname === item.href || \n                             (item.href === '/' && pathname.startsWith('/chat')) ||\n                             (item.href === '/settings' && pathname === '/settings');\n            return (\n              <Link\n                key={item.label}\n                href={item.href}\n                className={`flex flex-col items-center justify-center p-2 rounded-lg transition-colors duration-200 w-1/4 ${isActive ? 'text-primary' : 'text-muted-foreground hover:text-foreground'}`}\n              >\n                <item.icon className={`h-6 w-6 mb-0.5 ${isActive ? 'fill-primary/20' : ''}`} />\n                <span className={`text-xs font-medium ${isActive ? 'font-semibold' : ''}`}>{item.label}</span>\n              </Link>\n            );\n          })}\n        </div>\n      </nav>\n    </div>\n  );\n}\n"],"names":[],"mappings":"AAAA,wCAAwC;;;;;AAGxC;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;;;;;;;AAeA,MAAM,WAAW;IACf;QAAE,MAAM;QAAK,OAAO;QAAS,MAAM,wNAAA,CAAA,gBAAa;IAAC;IACjD;QAAE,MAAM;QAAU,OAAO;QAAS,MAAM,oMAAA,CAAA,QAAK;IAAC;IAC9C;QAAE,MAAM;QAAa,OAAO;QAAY,MAAM,oMAAA,CAAA,QAAK;IAAC;IACpD;QAAE,MAAM;QAAa,OAAO;QAAY,MAAM,0MAAA,CAAA,WAAQ;IAAC;CACxD;AAEM,SAAS,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,iBAAiB,KAAK,EAAE,aAAa,EAAmB;IACpG,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAO,WAAU;;kCAChB,8OAAC;wBAAI,WAAU;;4BAAkC;4BAC9C,gCACC,8OAAC,kIAAA,CAAA,SAAM;gCAAC,SAAQ;gCAAQ,MAAK;gCAAO,WAAU;gCAA8C,SAAS,IAAM,OAAO,IAAI;0CACpH,cAAA,8OAAC,gNAAA,CAAA,YAAS;oCAAC,WAAU;;;;;;;;;;;4BAGxB,OAAO,UAAU,yBAChB,8OAAC;gCAAG,WAAU;0CAAgD;;;;;qDAE9D,8OAAC;gCAAI,WAAU;0CAAgD;;;;;;;;;;;;oBAGlE,+BAAiB,8OAAC;wBAAI,WAAU;kCAA2B;;;;;;;;;;;;0BAG9D,8OAAC;gBAAK,WAAU;;oBAAiD;oBAC9D;;;;;;;0BAGH,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACZ,SAAS,GAAG,CAAC,CAAC;wBACb,MAAM,WAAW,aAAa,KAAK,IAAI,IACrB,KAAK,IAAI,KAAK,OAAO,SAAS,UAAU,CAAC,YACzC,KAAK,IAAI,KAAK,eAAe,aAAa;wBAC5D,qBACE,8OAAC,4JAAA,CAAA,UAAI;4BAEH,MAAM,KAAK,IAAI;4BACf,WAAW,CAAC,8FAA8F,EAAE,WAAW,iBAAiB,+CAA+C;;8CAEvL,8OAAC,KAAK,IAAI;oCAAC,WAAW,CAAC,eAAe,EAAE,WAAW,oBAAoB,IAAI;;;;;;8CAC3E,8OAAC;oCAAK,WAAW,CAAC,oBAAoB,EAAE,WAAW,kBAAkB,IAAI;8CAAG,KAAK,KAAK;;;;;;;2BALjF,KAAK,KAAK;;;;;oBAQrB;;;;;;;;;;;;;;;;;AAKV","debugId":null}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/avatar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,OAAO,WAAW,GAAG,kKAAA,CAAA,OAAoB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,+BAA+B;QAC5C,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,wEACA;QAED,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG,kKAAA,CAAA,WAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 291, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/chat/chat-list-item.tsx"],"sourcesContent":["import Link from 'next/link';\nimport Image from 'next/image';\nimport type { Chat, User } from '@/lib/types';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { formatDistanceToNowStrict } from 'date-fns';\n\ninterface ChatListItemProps {\n  chat: Chat;\n  currentUser: User;\n}\n\nexport function ChatListItem({ chat, currentUser }: ChatListItemProps) {\n  const otherParticipant = chat.participants.find(p => p.id !== currentUser.id) || chat.participants[0];\n  const lastMessage = chat.lastMessage;\n\n  const getInitials = (name: string) => {\n    const names = name.split(' ');\n    if (names.length > 1) {\n      return `${names[0][0]}${names[1][0]}`.toUpperCase();\n    }\n    return names[0].substring(0, 2).toUpperCase();\n  };\n\n  return (\n    <Link\n      href={`/chat/${chat.id}`}\n      className=\"flex items-center p-3 hover:bg-secondary/50 transition-colors duration-150 border-b border-border last:border-b-0\"\n    >\n      <Avatar className=\"h-12 w-12 mr-3\">\n        <AvatarImage src={otherParticipant.avatarUrl} alt={otherParticipant.name} data-ai-hint=\"person portrait\" />\n        <AvatarFallback>{getInitials(otherParticipant.name)}</AvatarFallback>\n      </Avatar>\n      <div className=\"flex-1 min-w-0\">\n        <div className=\"flex justify-between items-center\">\n          <h3 className=\"font-semibold truncate font-headline text-foreground\">{otherParticipant.name}</h3>\n          {lastMessage && (\n            <p className=\"text-xs text-muted-foreground whitespace-nowrap\">\n              {formatDistanceToNowStrict(new Date(lastMessage.timestamp), { addSuffix: true })}\n            </p>\n          )}\n        </div>\n        <div className=\"flex justify-between items-center\">\n          <p className=\"text-sm text-muted-foreground truncate\">\n            {lastMessage?.senderId === currentUser.id ? 'You: ' : ''}\n            {lastMessage?.content || (lastMessage?.attachments && lastMessage.attachments.length > 0 ? `${lastMessage.attachments[0].type === 'image' ? '📷 Image' : lastMessage.attachments[0].type === 'video' ? '📹 Video' : '📄 Document'}` : 'No messages yet')}\n          </p>\n          {chat.unreadCount && chat.unreadCount > 0 && (\n            <span className=\"ml-2 bg-primary text-primary-foreground text-xs font-bold px-2 py-0.5 rounded-full\">\n              {chat.unreadCount}\n            </span>\n          )}\n        </div>\n      </div>\n    </Link>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AAGA;AACA;;;;;AAOO,SAAS,aAAa,EAAE,IAAI,EAAE,WAAW,EAAqB;IACnE,MAAM,mBAAmB,KAAK,YAAY,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,YAAY,EAAE,KAAK,KAAK,YAAY,CAAC,EAAE;IACrG,MAAM,cAAc,KAAK,WAAW;IAEpC,MAAM,cAAc,CAAC;QACnB,MAAM,QAAQ,KAAK,KAAK,CAAC;QACzB,IAAI,MAAM,MAAM,GAAG,GAAG;YACpB,OAAO,GAAG,KAAK,CAAC,EAAE,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,WAAW;QACnD;QACA,OAAO,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,WAAW;IAC7C;IAEA,qBACE,8OAAC,4JAAA,CAAA,UAAI;QACH,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;QACxB,WAAU;;0BAEV,8OAAC,kIAAA,CAAA,SAAM;gBAAC,WAAU;;kCAChB,8OAAC,kIAAA,CAAA,cAAW;wBAAC,KAAK,iBAAiB,SAAS;wBAAE,KAAK,iBAAiB,IAAI;wBAAE,gBAAa;;;;;;kCACvF,8OAAC,kIAAA,CAAA,iBAAc;kCAAE,YAAY,iBAAiB,IAAI;;;;;;;;;;;;0BAEpD,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAwD,iBAAiB,IAAI;;;;;;4BAC1F,6BACC,8OAAC;gCAAE,WAAU;0CACV,CAAA,GAAA,yJAAA,CAAA,4BAAyB,AAAD,EAAE,IAAI,KAAK,YAAY,SAAS,GAAG;oCAAE,WAAW;gCAAK;;;;;;;;;;;;kCAIpF,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAE,WAAU;;oCACV,aAAa,aAAa,YAAY,EAAE,GAAG,UAAU;oCACrD,aAAa,WAAW,CAAC,aAAa,eAAe,YAAY,WAAW,CAAC,MAAM,GAAG,IAAI,GAAG,YAAY,WAAW,CAAC,EAAE,CAAC,IAAI,KAAK,UAAU,aAAa,YAAY,WAAW,CAAC,EAAE,CAAC,IAAI,KAAK,UAAU,aAAa,eAAe,GAAG,iBAAiB;;;;;;;4BAExP,KAAK,WAAW,IAAI,KAAK,WAAW,GAAG,mBACtC,8OAAC;gCAAK,WAAU;0CACb,KAAK,WAAW;;;;;;;;;;;;;;;;;;;;;;;;AAO/B","debugId":null}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/data.ts"],"sourcesContent":["import type { User, Chat, Message, Call, Attachment } from './types';\n\nexport let mockUsers: User[] = [\n  { id: 'user1', name: 'Alice Wonderland', avatarUrl: 'https://placehold.co/100x100.png?text=AW', status: 'online', statusMessage: 'Coding away! 💻', email: 'alice@example.com', ddi: '+1', ddd: '555', phone: '1234567' },\n  { id: 'user2', name: 'Bob The Builder', avatarUrl: 'https://placehold.co/100x100.png?text=BB', status: 'offline', statusMessage: 'Busy building things.', email: 'bob@example.com', ddi: '+44', ddd: '20', phone: '9876543' },\n  { id: 'user3', name: 'Charlie Chaplin', avatarUrl: 'https://placehold.co/100x100.png?text=CC', status: 'online', statusMessage: 'At the movies 🎬', email: 'charlie@example.com' },\n  { id: 'user4', name: 'Diana Prince', avatarUrl: 'https://placehold.co/100x100.png?text=DP', status: 'away', statusMessage: 'Saving the world!' },\n  { id: 'currentUser', name: 'Connectify User', avatarUrl: 'https://placehold.co/100x100.png?text=ME', statusMessage: 'Hey there! I am using Connectify.', email: 'you@example.com' },\n];\n\nconst createMessage = (id: string, senderId: string, chatId: string, content?: string, attachments?: Attachment[], minutesAgo: number = 0, emojis?: string[]): Message => ({\n  id,\n  senderId,\n  chatId,\n  content,\n  attachments,\n  timestamp: Date.now() - minutesAgo * 60 * 1000,\n  status: 'read',\n  emojis: emojis || [],\n});\n\nexport let mockMessages: Message[] = [\n  createMessage('msg1', 'user1', 'chat1', 'Hey Bob, how are you?', undefined, 60, ['👍']),\n  createMessage('msg2', 'currentUser', 'chat1', 'Hi Alice! I am good, thanks for asking. How about you?', undefined, 58),\n  createMessage('msg3', 'user1', 'chat1', 'Doing great! Working on a new project.', undefined, 57, ['🎉']),\n  createMessage('msg4', 'currentUser', 'chat1', 'Sounds exciting! What is it about?', undefined, 55),\n  createMessage('msg5', 'user1', 'chat1', 'It is a secret for now 😉', undefined, 50),\n  createMessage('msg6', 'currentUser', 'chat1', 'Haha, okay! Let me know when you can share.', undefined, 48, ['😄']),\n  createMessage('msg7', 'user1', 'chat1', 'Sure thing!', undefined, 45),\n  createMessage('msg8', 'user1', 'chat1', 'Check out this image!', [{ type: 'image', url: 'https://placehold.co/600x400.png', fileName: 'landscape.png' }], 40, ['😮']),\n  createMessage('msg9', 'currentUser', 'chat1', 'Wow, beautiful!', undefined, 38),\n  createMessage('msg10', 'user1', 'chat1', 'And this document.', [{ type: 'pdf', url: '#', fileName: 'project_brief.pdf' }], 35),\n  \n  createMessage('msg11', 'user2', 'chat2', 'Hi! Are we still on for lunch?', undefined, 120),\n  createMessage('msg12', 'currentUser', 'chat2', 'Yes, absolutely! See you at 1 PM.', undefined, 118, ['👍']),\n  \n  createMessage('msg13', 'user3', 'chat3', 'Can you call me later?', undefined, 5),\n  createMessage('msg14', 'currentUser', 'chat3', 'Sure, around 5 PM?', undefined, 3),\n  createMessage('msg15', 'user3', 'chat3', 'Perfect!', undefined, 1, ['👌']),\n\n  createMessage('msg16', 'user4', 'chat4', 'Did you see the video I sent?', [{type: 'video', url: '#', thumbnailUrl: 'https://placehold.co/300x200.png?text=Video', fileName: 'funny_cat.mp4'}], 10),\n  createMessage('msg17', 'currentUser', 'chat4', 'Not yet, will watch it soon!', undefined, 8),\n];\n\nexport let mockChats: Chat[] = [\n  {\n    id: 'chat1',\n    participants: [mockUsers[0], mockUsers[4]],\n    messages: mockMessages.filter(m => m.chatId === 'chat1').sort((a,b) => a.timestamp - b.timestamp),\n    lastMessage: mockMessages.filter(m => m.chatId === 'chat1').sort((a,b) => b.timestamp - a.timestamp)[0],\n    unreadCount: 0,\n  },\n  {\n    id: 'chat2',\n    participants: [mockUsers[1], mockUsers[4]],\n    messages: mockMessages.filter(m => m.chatId === 'chat2').sort((a,b) => a.timestamp - b.timestamp),\n    lastMessage: mockMessages.filter(m => m.chatId === 'chat2').sort((a,b) => b.timestamp - a.timestamp)[0],\n    unreadCount: 2,\n  },\n  {\n    id: 'chat3',\n    participants: [mockUsers[2], mockUsers[4]],\n    messages: mockMessages.filter(m => m.chatId === 'chat3').sort((a,b) => a.timestamp - b.timestamp),\n    lastMessage: mockMessages.filter(m => m.chatId === 'chat3').sort((a,b) => b.timestamp - a.timestamp)[0],\n    unreadCount: 0,\n  },\n  {\n    id: 'chat4',\n    participants: [mockUsers[3], mockUsers[4]],\n    messages: mockMessages.filter(m => m.chatId === 'chat4').sort((a,b) => a.timestamp - b.timestamp),\n    lastMessage: mockMessages.filter(m => m.chatId === 'chat4').sort((a,b) => b.timestamp - a.timestamp)[0],\n    unreadCount: 1,\n  },\n];\n\nexport const mockCalls: Call[] = [\n  {\n    id: 'call1',\n    type: 'video',\n    status: 'missed',\n    contact: mockUsers[0], // Alice\n    timestamp: Date.now() - 2 * 60 * 60 * 1000, // 2 hours ago\n  },\n  {\n    id: 'call2',\n    type: 'audio',\n    status: 'outgoing',\n    contact: mockUsers[1], // Bob\n    timestamp: Date.now() - 25 * 60 * 1000, // 25 minutes ago\n    duration: 300, // 5 minutes\n  },\n  {\n    id: 'call3',\n    type: 'video',\n    status: 'incoming',\n    contact: mockUsers[2], // Charlie\n    timestamp: Date.now() - 5 * 24 * 60 * 60 * 1000, // 5 days ago\n    duration: 1200, // 20 minutes\n  },\n  {\n    id: 'call4',\n    type: 'audio',\n    status: 'missed',\n    contact: mockUsers[3], // Diana\n    timestamp: Date.now() - 10 * 60 * 1000, // 10 minutes ago\n  },\n   {\n    id: 'call5',\n    type: 'audio',\n    status: 'incoming',\n    contact: mockUsers[0], // Alice\n    timestamp: Date.now() - 3 * 24 * 60 * 60 * 1000, // 3 days ago\n    duration: 600, // 10 minutes\n  },\n];\n\n\nexport const getChatById = (id: string): Chat | undefined => {\n  const chat = mockChats.find(chat => chat.id === id);\n  // Ensure messages are sorted when fetching\n  if (chat) {\n    return {\n      ...chat,\n      messages: [...chat.messages].sort((a, b) => a.timestamp - b.timestamp)\n    };\n  }\n  return undefined;\n};\n\nexport const getUserById = (id: string): User | undefined => mockUsers.find(user => user.id === id);\nexport const getCurrentUser = (): User => mockUsers.find(user => user.id === 'currentUser')!;\n\nexport function addMockUser(newUserInfo: Omit<User, 'id' | 'avatarUrl' | 'status' | 'statusMessage'>): User {\n  const initials = newUserInfo.name.split(' ').map(n => n[0]).join('').substring(0,2).toUpperCase() || '??';\n  const newUser: User = {\n    ...newUserInfo,\n    id: `user${Date.now()}`,\n    avatarUrl: `https://placehold.co/100x100.png?text=${initials}`,\n    status: 'offline', // Default presence status\n    statusMessage: 'Hey there! I am new to Connectify.', // Default status message\n  };\n  mockUsers.push(newUser);\n  return newUser;\n}\n\nexport function updateCurrentUserSettings(settings: { name?: string; avatarUrl?: string; statusMessage?: string }): User | null {\n  const currentUserIndex = mockUsers.findIndex(user => user.id === 'currentUser');\n  if (currentUserIndex !== -1) {\n    const updatedUser = { ...mockUsers[currentUserIndex] };\n    if (settings.name) {\n      updatedUser.name = settings.name;\n    }\n    if (settings.avatarUrl) {\n      updatedUser.avatarUrl = settings.avatarUrl;\n    }\n    if (settings.statusMessage !== undefined) { // Allow empty string for status message\n      updatedUser.statusMessage = settings.statusMessage;\n    }\n    mockUsers[currentUserIndex] = updatedUser;\n\n    // Update user in participants lists of chats (important for UI consistency)\n    mockChats = mockChats.map(chat => ({\n      ...chat,\n      participants: chat.participants.map(p => p.id === 'currentUser' ? updatedUser : p)\n    }));\n\n    return updatedUser;\n  }\n  return null;\n}\n\nexport function addMessageToChat(chatId: string, message: Message): void {\n  const chatIndex = mockChats.findIndex(c => c.id === chatId);\n  if (chatIndex !== -1) {\n    const updatedChat = { ...mockChats[chatIndex] };\n    updatedChat.messages = [...updatedChat.messages, message].sort((a, b) => a.timestamp - b.timestamp);\n    updatedChat.lastMessage = message;\n    \n    // Update the message in the global mockMessages array as well\n    const messageIndex = mockMessages.findIndex(m => m.id === message.id);\n    if (messageIndex !== -1) {\n      mockMessages[messageIndex] = message;\n    } else {\n      mockMessages.push(message);\n    }\n    mockMessages.sort((a,b) => a.timestamp - b.timestamp); // keep it sorted\n\n    mockChats[chatIndex] = updatedChat;\n  } else {\n    const contactId = chatId.replace('chat_with_', '');\n    const contactUser = getUserById(contactId);\n    const currentUser = getCurrentUser();\n    if (contactUser && currentUser) {\n       const newChat: Chat = {\n          id: chatId,\n          participants: [contactUser, currentUser],\n          messages: [message],\n          lastMessage: message,\n          unreadCount: 0, \n        };\n        mockChats.push(newChat);\n        // Add to global messages as well\n        mockMessages.push(message);\n        mockMessages.sort((a,b) => a.timestamp - b.timestamp);\n    }\n  }\n}\n\nexport function toggleEmojiReaction(chatId: string, messageId: string, emoji: string): Message | undefined {\n  const chatIndex = mockChats.findIndex(c => c.id === chatId);\n  if (chatIndex === -1) return undefined;\n\n  const chat = mockChats[chatIndex];\n  const messageIndexInChat = chat.messages.findIndex(m => m.id === messageId);\n  if (messageIndexInChat === -1) return undefined;\n\n  const message = { ...chat.messages[messageIndexInChat] }; // Create a shallow copy\n  message.emojis = message.emojis ? [...message.emojis] : []; // Ensure emojis array exists and is a copy\n\n  const emojiIndex = message.emojis.indexOf(emoji);\n  if (emojiIndex > -1) {\n    message.emojis.splice(emojiIndex, 1); // Remove emoji\n  } else {\n    message.emojis.push(emoji); // Add emoji\n  }\n\n  // Update message in chat's messages array\n  chat.messages[messageIndexInChat] = message;\n\n  // Update message in global mockMessages array\n  const messageIndexGlobal = mockMessages.findIndex(m => m.id === messageId);\n  if (messageIndexGlobal !== -1) {\n    mockMessages[messageIndexGlobal] = message;\n  }\n  \n  // No need to re-sort chats or messages here as only an existing message is modified\n\n  return message; // Return the updated message\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 749, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 778, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["\n'use client'; // Add this for useState and event handling\n\nimport * as React from 'react'; // Import React for useState\nimport { MainLayout } from '@/components/layout/main-layout';\nimport { ChatListItem } from '@/components/chat/chat-list-item';\nimport { mockChats, getCurrentUser } from '@/lib/data';\nimport type { Chat } from '@/lib/types';\nimport { Input } from '@/components/ui/input';\nimport { Search, MessageCircle } from 'lucide-react';\n\nexport default function ChatsPage() {\n  const chats: Chat[] = mockChats; \n  const currentUser = getCurrentUser();\n  const [searchTerm, setSearchTerm] = React.useState('');\n\n  // Sort chats by the timestamp of their last message, most recent first\n  const sortedChats = [...chats].sort((a, b) => {\n    const lastMessageATime = a.lastMessage?.timestamp || 0;\n    const lastMessageBTime = b.lastMessage?.timestamp || 0;\n    return lastMessageBTime - lastMessageATime;\n  });\n\n  const filteredChats = sortedChats.filter(chat => {\n    const otherParticipant = chat.participants.find(p => p.id !== currentUser.id) || chat.participants[0];\n    return otherParticipant.name.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n\n  return (\n    <MainLayout title=\"Conecta Aí\">\n      <div className=\"p-3 bg-card sticky top-0 z-10 border-b\">\n        <div className=\"relative\">\n          <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-muted-foreground\" />\n          <Input \n            type=\"search\" \n            placeholder=\"Search chats...\" \n            className=\"pl-10 h-10 rounded-full bg-muted border-none focus-visible:ring-primary\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n      </div>\n      <div className=\"flex flex-col bg-card\">\n        {filteredChats.length > 0 ? (\n          filteredChats.map((chat) => (\n            <ChatListItem key={chat.id} chat={chat} currentUser={currentUser} />\n          ))\n        ) : (\n          <div className=\"flex flex-col items-center justify-center h-[calc(100vh-200px)] p-8 text-center\">\n            <MessageCircle className=\"w-16 h-16 text-muted-foreground mb-4\" />\n            <h2 className=\"text-xl font-semibold text-foreground mb-2\">\n              {searchTerm ? 'Nenhum chat encontrado' : 'Nenhum chat ainda'}\n            </h2>\n            <p className=\"text-muted-foreground\">\n              {searchTerm ? 'Tente um termo de busca diferente.' : 'Inicie uma nova conversa a partir dos seus contatos.'}\n            </p>\n          </div>\n        )}\n      </div>\n    </MainLayout>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA,oVAAgC,4BAA4B;AAC5D;AACA;AACA;AAEA;AACA;AAAA;AARA,cAAc,2CAA2C;;;;;;;;AAU1C,SAAS;IACtB,MAAM,QAAgB,kHAAA,CAAA,YAAS;IAC/B,MAAM,cAAc,CAAA,GAAA,kHAAA,CAAA,iBAAc,AAAD;IACjC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAAE;IAEnD,uEAAuE;IACvE,MAAM,cAAc;WAAI;KAAM,CAAC,IAAI,CAAC,CAAC,GAAG;QACtC,MAAM,mBAAmB,EAAE,WAAW,EAAE,aAAa;QACrD,MAAM,mBAAmB,EAAE,WAAW,EAAE,aAAa;QACrD,OAAO,mBAAmB;IAC5B;IAEA,MAAM,gBAAgB,YAAY,MAAM,CAAC,CAAA;QACvC,MAAM,mBAAmB,KAAK,YAAY,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,YAAY,EAAE,KAAK,KAAK,YAAY,CAAC,EAAE;QACrG,OAAO,iBAAiB,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,WAAW;IAC5E;IAEA,qBACE,8OAAC,8IAAA,CAAA,aAAU;QAAC,OAAM;;0BAChB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,sMAAA,CAAA,SAAM;4BAAC,WAAU;;;;;;sCAClB,8OAAC,iIAAA,CAAA,QAAK;4BACJ,MAAK;4BACL,aAAY;4BACZ,WAAU;4BACV,OAAO;4BACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;;;;;;0BAInD,8OAAC;gBAAI,WAAU;0BACZ,cAAc,MAAM,GAAG,IACtB,cAAc,GAAG,CAAC,CAAC,qBACjB,8OAAC,kJAAA,CAAA,eAAY;wBAAe,MAAM;wBAAM,aAAa;uBAAlC,KAAK,EAAE;;;;8CAG5B,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,wNAAA,CAAA,gBAAa;4BAAC,WAAU;;;;;;sCACzB,8OAAC;4BAAG,WAAU;sCACX,aAAa,2BAA2B;;;;;;sCAE3C,8OAAC;4BAAE,WAAU;sCACV,aAAa,uCAAuC;;;;;;;;;;;;;;;;;;;;;;;AAOnE","debugId":null}}]
}